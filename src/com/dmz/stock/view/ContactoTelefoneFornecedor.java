package com.dmz.stock.view;

import com.dmz.stock.controller.ControllerContactoFornecedor;
import com.dmz.stock.model.ContactoTelefone;
import configuracoes.SystemMessage;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kennedy Melvin Serafim
 *
 */
public class ContactoTelefoneFornecedor extends javax.swing.JDialog {

    private static List<ContactoTelefone> phoneGeneric = new ArrayList<>();

    /**
     *
     * @return
     */
    public static List<ContactoTelefone> getPhoneGeneric() {
        return phoneGeneric;
    }

    /**
     *
     * @param phoneGeneric
     */
    public static void setPhoneGeneric(List<ContactoTelefone> phoneGeneric) {
        ContactoTelefoneFornecedor.phoneGeneric = phoneGeneric;
    }

    /**
     * Creates new form Telefone_Generic
     *
     * @param parent
     * @param modal
     */
    public ContactoTelefoneFornecedor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        atalhoTeclado();
        configuracoes();
    }

    /**
     *
     * @param parent
     * @param modal
     * @param phones
     */
    public ContactoTelefoneFornecedor(java.awt.Frame parent, boolean modal, ContactoTelefone phones) {
        super(parent, modal);
        if (validatePhoneExist(phones)) {
            ContactoTelefoneFornecedor.phoneGeneric.add(phones);
        }
        initComponents();
        atalhoTeclado();
        configuracoes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePhone = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        txtTelefone = new javax.swing.JFormattedTextField();
        btnExcluir = new javax.swing.JButton();
        btnAddTable = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cli_Master 0.3 - Adicionando Número de telefone");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tablePhone.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        tablePhone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Telefone", "Operadora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePhone.setRowHeight(24);
        tablePhone.setRowMargin(8);
        jScrollPane1.setViewportView(tablePhone);
        if (tablePhone.getColumnModel().getColumnCount() > 0) {
            tablePhone.getColumnModel().getColumn(0).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        jLabel1.setText("Número de Telefone:");

        btnEditar.setBackground(new java.awt.Color(255, 255, 255));
        btnEditar.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(0, 153, 255));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/available-updates-16.png"))); // NOI18N
        btnEditar.setText("Editar (F2)");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        txtTelefone.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("+ (258) ## ### # ###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefone.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        txtTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefoneKeyPressed(evt);
            }
        });

        btnExcluir.setBackground(new java.awt.Color(255, 51, 0));
        btnExcluir.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        btnExcluir.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/trash-9-24.png"))); // NOI18N
        btnExcluir.setText("Excluir (Del)");
        btnExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAddTable.setBackground(new java.awt.Color(26, 118, 141));
        btnAddTable.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        btnAddTable.setForeground(new java.awt.Color(255, 255, 255));
        btnAddTable.setText("+");
        btnAddTable.setToolTipText("Adicionar na tabela");
        btnAddTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTableActionPerformed(evt);
            }
        });

        btnSair.setBackground(new java.awt.Color(255, 51, 51));
        btnSair.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btnSair.setForeground(new java.awt.Color(255, 255, 255));
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/account-logout-16.png"))); // NOI18N
        btnSair.setText("Sair (Esc)");
        btnSair.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("Adicionando Número de Telefone");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddTable, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluir)
                        .addGap(34, 34, 34)
                        .addComponent(btnSair)
                        .addGap(28, 28, 28))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddTable)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir)
                    .addComponent(btnSair))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTelefoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefoneKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int length = txtTelefone.getText().length();

            try {
                Character.isDigit(Integer.parseInt(String.valueOf(txtTelefone.getText().charAt(length - 1))));

                if (validatePhoneExist(new ContactoTelefone(txtTelefone.getText()))) {
                    ContactoTelefoneFornecedor.phoneGeneric.add(new ContactoTelefone(txtTelefone.getText()));
                    atualizarTabela();

                }
            } catch (NumberFormatException | HeadlessException e) {
                JOptionPane.showMessageDialog(this,
                        "Número de telefone inválido.",
                        SystemMessage.SYSTEM_NAME, JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtTelefoneKeyPressed

    private void btnAddTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTableActionPerformed
        int length = txtTelefone.getText().length();
        try {
            Character.isDigit(Integer.parseInt(String.valueOf(txtTelefone.getText().charAt(length - 1))));

            if (validatePhoneExist(new ContactoTelefone(txtTelefone.getText()))) {
                ContactoTelefoneFornecedor.phoneGeneric.add(new ContactoTelefone(txtTelefone.getText()));
                atualizarTabela();

            }
        } catch (NumberFormatException | HeadlessException e) {
            JOptionPane.showMessageDialog(this,
                    "Número de telefone inválido.",
                    SystemMessage.SYSTEM_NAME, JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAddTableActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed

        if (tablePhone.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Não existe número de telefone na tabela para ser excluido.",
                    SystemMessage.SYSTEM_NAME, JOptionPane.WARNING_MESSAGE);
        } else {
            try {

                int linha = tablePhone.getSelectedRow();
                DefaultTableModel model = (DefaultTableModel) tablePhone.getModel();
                model.removeRow(linha);
                phoneGeneric.remove(linha);
                atualizarTabela();

            } catch (ArrayIndexOutOfBoundsException e) {
                JOptionPane.showMessageDialog(this, "Selecione o número de telefone na tabela para ser excluido.",
                        SystemMessage.SYSTEM_NAME, JOptionPane.WARNING_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (tablePhone.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Não existe número de telefone na tabela para ser editado.",
                    SystemMessage.SYSTEM_NAME, JOptionPane.WARNING_MESSAGE);
        } else {
            try {

                int linha = tablePhone.getSelectedRow();
                String telefoneEditado = tablePhone.getValueAt(linha, 1).toString();
                DefaultTableModel model = (DefaultTableModel) tablePhone.getModel();
                model.removeRow(linha);
                phoneGeneric.remove(linha);
                atualizarTabela();
                txtTelefone.setText(telefoneEditado);

            } catch (ArrayIndexOutOfBoundsException e) {
                JOptionPane.showMessageDialog(this,
                        "Selecione o número de telefone na tabela para ser excluido.",
                        SystemMessage.SYSTEM_NAME, JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.err.println(ex.getMessage());
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            ContactoTelefoneFornecedor dialog = new ContactoTelefoneFornecedor(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddTable;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tablePhone;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

    private void configuracoes() {
        setLocationRelativeTo(null);
        this.setIconImage(new ImageIcon(getClass().
                getResource(SystemMessage.IMAGE_URL)).getImage());
        this.setTitle(SystemMessage.SYSTEM_NAME + " - Adicionando números de Telefone");

        atualizarTabela();
    }

    /**
     *
     */
    private void atualizarTabela() {
        try {

            DefaultTableModel model = (DefaultTableModel) tablePhone.getModel();
            model.setNumRows(0);

            for (int i = 0; i < ContactoTelefoneFornecedor.phoneGeneric.size(); i++) {
                String operadora = "Não Definida";

                if (ContactoTelefoneFornecedor.phoneGeneric.get(i).getTelefone().substring(8, 10).equalsIgnoreCase("82")
                        || ContactoTelefoneFornecedor.phoneGeneric.get(i).getTelefone().substring(8, 10).equalsIgnoreCase("83")) {
                    operadora = "M Cell";

                } else if (ContactoTelefoneFornecedor.phoneGeneric.get(i).getTelefone().substring(8, 10).equalsIgnoreCase("84")
                        || ContactoTelefoneFornecedor.phoneGeneric.get(i).getTelefone().substring(8, 10).equalsIgnoreCase("85")) {
                    operadora = "Vodacom";

                } else if (ContactoTelefoneFornecedor.phoneGeneric.get(i).getTelefone().substring(8, 10).equalsIgnoreCase("86")
                        || ContactoTelefoneFornecedor.phoneGeneric.get(i).getTelefone().substring(8, 10).equalsIgnoreCase("87")) {
                    operadora = "Movitel";
                }

                model.addRow(new Object[]{
                    (i + 1),
                    ContactoTelefoneFornecedor.phoneGeneric.get(i).getTelefone(),
                    operadora
                });
            }
        } catch (Exception e) {
        }
        txtTelefone.setText(null);
    }

    /**
     *
     * @param phone
     * @return
     */
    private static boolean validatePhoneExist(ContactoTelefone phone) {

        for (ContactoTelefone phoneGeneric1 : phoneGeneric) {
            if (phoneGeneric1.getTelefone().equalsIgnoreCase(phone.getTelefone())) {
                JOptionPane.showMessageDialog(null,
                        "O telefone " + phone.getTelefone() + ", já está na lista ",
                        SystemMessage.SYSTEM_NAME, JOptionPane.WARNING_MESSAGE);
                return false;
            }
        }

        if (ControllerContactoFornecedor.verificarExistenciaTelefoneFornecedorController(
                phone.getTelefone())) {
            JOptionPane.showMessageDialog(null,
                    "Número de telefone indisponivel, tente outro.",
                    SystemMessage.SYSTEM_NAME,
                    JOptionPane.WARNING_MESSAGE);
            return false;
        }

        return true;
    }

    private void atalhoTeclado() {
        InputMap inputMap = this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);

        /*
         ============================Botão para sair da tela======================
         */
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "closeSystem");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("closeSystem", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {
                btnSair.doClick();
            }
        });

        /*
         ============================Botão para editar======================
         */
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0), "editar");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("editar", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {
                btnEditar.doClick();
            }
        });

        /*
         ============================Botão para excluir======================
         */
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_DELETE, 0), "excluir");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("excluir", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {
                btnExcluir.doClick();
            }
        });

        /*
         ============================Botão para adicionar======================
         */
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F12, 0), "gravar");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("gravar", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {
                btnAddTable.doClick();
            }
        });
    }
}
